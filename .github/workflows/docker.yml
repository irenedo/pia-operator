name: Build and Push Docker Image

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: renedo/pia-operator

jobs:
  build-and-push-images:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            arch: amd64
          - runner: ubuntu-24.04-arm
            arch: arm64
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      run: |
        if [ "${{ github.ref }}" = "refs/heads/master" ]; then
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}-latest-${{ matrix.arch }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}-${{ github.sha }}-${{ matrix.arch }}"
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG=${GITHUB_REF#refs/tags/}
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-${{ github.run_id }}-${{ matrix.arch }}"
        fi
        
        for tag in $TAGS; do
          docker build -t $tag .
          docker push $tag
        done

  build-and-push-manifests:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Create and push manifest for master branch
      if: github.ref == 'refs/heads/master'
      run: |
        # Create latest manifest
        docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}-latest-amd64 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}-latest-arm64
        docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Create hash-based manifest
        docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}-${{ github.sha }}-amd64 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}-${{ github.sha }}-arm64
        docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Create and push manifest for tags
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        
        # Create versioned tag manifest
        docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG} \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-${{ github.run_id }}-amd64 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-${{ github.run_id }}-arm64
        docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}
        
        # Create latest manifest for tags
        docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-${{ github.run_id }}-amd64 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-${{ github.run_id }}-arm64
        docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest